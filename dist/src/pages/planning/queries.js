"use strict";
var __makeTemplateObject = (this && this.__makeTemplateObject) || function (cooked, raw) {
    if (Object.defineProperty) { Object.defineProperty(cooked, "raw", { value: raw }); } else { cooked.raw = raw; }
    return cooked;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
var graphql_tag_1 = __importDefault(require("graphql-tag"));
var FRAGMENTS = {
    EMPLOYEE: graphql_tag_1.default(templateObject_1 || (templateObject_1 = __makeTemplateObject(["\n    fragment EmployeeFields on RoofingCompanyEmployee {\n      code\n      resource\n      firstName\n      lastName\n      costCenterCode\n    }\n  "], ["\n    fragment EmployeeFields on RoofingCompanyEmployee {\n      code\n      resource\n      firstName\n      lastName\n      costCenterCode\n    }\n  "]))),
    WORK_ORDER: graphql_tag_1.default(templateObject_2 || (templateObject_2 = __makeTemplateObject(["\n    fragment WorkOrderFields on WorkOrder {\n      id\n      code\n      description\n      soCode\n      soStatus\n      soOrderType\n      soEmployeeCode\n      soPriority\n      starDate\n      startTime\n      endDate\n      endTime\n    }\n  "], ["\n    fragment WorkOrderFields on WorkOrder {\n      id\n      code\n      description\n      soCode\n      soStatus\n      soOrderType\n      soEmployeeCode\n      soPriority\n      starDate\n      startTime\n      endDate\n      endTime\n    }\n  "])))
};
exports.FETCH_PLANNING_PAGE_SETTINGS = graphql_tag_1.default(templateObject_3 || (templateObject_3 = __makeTemplateObject(["\n  query planningPageSettings {\n    currentUser {\n      planningPageSettings\n    }\n  }\n"], ["\n  query planningPageSettings {\n    currentUser {\n      planningPageSettings\n    }\n  }\n"])));
exports.SAVE_PLANNING_PAGE_SETTINGS = graphql_tag_1.default(templateObject_4 || (templateObject_4 = __makeTemplateObject(["\n  mutation savePlanningPageSettings($settings: Json) {\n    savePlanningPageSettings(settings: $settings)\n  }\n"], ["\n  mutation savePlanningPageSettings($settings: Json) {\n    savePlanningPageSettings(settings: $settings)\n  }\n"])));
exports.FETCH_SELECTED_EMPLOYEES = graphql_tag_1.default(templateObject_5 || (templateObject_5 = __makeTemplateObject(["\n  query fetchSelectedEmployees($codes: [String!]!) {\n    roofingCompanyEmployees(where: { code_in: $codes }) {\n      ...EmployeeFields\n      photo\n    }\n  }\n  ", "\n"], ["\n  query fetchSelectedEmployees($codes: [String!]!) {\n    roofingCompanyEmployees(where: { code_in: $codes }) {\n      ...EmployeeFields\n      photo\n    }\n  }\n  ", "\n"])), FRAGMENTS.EMPLOYEE);
exports.FETCH_ALL_EMPLOYEES = graphql_tag_1.default(templateObject_6 || (templateObject_6 = __makeTemplateObject(["\n  query fetchAllEmployees {\n    roofingCompanyEmployees(where: { resource_not: null }) {\n      ...EmployeeFields\n    }\n  }\n  ", "\n"], ["\n  query fetchAllEmployees {\n    roofingCompanyEmployees(where: { resource_not: null }) {\n      ...EmployeeFields\n    }\n  }\n  ", "\n"])), FRAGMENTS.EMPLOYEE);
// fixme: startDate and endDate should have Date type
exports.FETCH_ORDERS_OF_SELECTED_EMPLOYEES = graphql_tag_1.default(templateObject_7 || (templateObject_7 = __makeTemplateObject(["\n  query fetchOrdersOfSelectedEmployees(\n    $resourceCodes: [String!]!\n    $startDate: String!\n    $endDate: String!\n  ) {\n    workOrders(\n      where: {\n        AND: [\n          { soEmployeeCode_in: $resourceCodes }\n          { starDate_gte: $startDate }\n          { endDate_lte: $endDate }\n          { startTime_not: null }\n          { endTime_not: null }\n        ]\n      }\n    ) {\n      ...WorkOrderFields\n    }\n  }\n  ", "\n"], ["\n  query fetchOrdersOfSelectedEmployees(\n    $resourceCodes: [String!]!\n    $startDate: String!\n    $endDate: String!\n  ) {\n    workOrders(\n      where: {\n        AND: [\n          { soEmployeeCode_in: $resourceCodes }\n          { starDate_gte: $startDate }\n          { endDate_lte: $endDate }\n          { startTime_not: null }\n          { endTime_not: null }\n        ]\n      }\n    ) {\n      ...WorkOrderFields\n    }\n  }\n  ", "\n"])), FRAGMENTS.WORK_ORDER);
exports.FETCH_UNASSIGNED_ORDERS = graphql_tag_1.default(templateObject_8 || (templateObject_8 = __makeTemplateObject(["\n  query fetchUnassignedOrders($startDate: String!, $endDate: String!) {\n    workOrders(\n      where: {\n        OR: [\n          # get unassigned work orders\n          {\n            AND: [\n              { soStatus: \"Open\" }\n              { soEmployeeCode: null }\n              {\n                OR: [\n                  { startTime: null }\n                  { starDate: null }\n                  { endTime: null }\n                  { endDate: null }\n                  { starDate_gte: $startDate }\n                  { endDate_lte: $endDate }\n                ]\n              }\n            ]\n          }\n          # get assigned orders which don't have start or end times\n          {\n            AND: [\n              { soStatus: \"Open\" }\n              { soEmployeeCode_not: null }\n              {\n                OR: [\n                  { startTime: null }\n                  { starDate: null }\n                  { endTime: null }\n                  { endDate: null }\n                ]\n              }\n            ]\n          }\n        ]\n      }\n    ) {\n      ...WorkOrderFields\n    }\n  }\n  ", "\n"], ["\n  query fetchUnassignedOrders($startDate: String!, $endDate: String!) {\n    workOrders(\n      where: {\n        OR: [\n          # get unassigned work orders\n          {\n            AND: [\n              { soStatus: \"Open\" }\n              { soEmployeeCode: null }\n              {\n                OR: [\n                  { startTime: null }\n                  { starDate: null }\n                  { endTime: null }\n                  { endDate: null }\n                  { starDate_gte: $startDate }\n                  { endDate_lte: $endDate }\n                ]\n              }\n            ]\n          }\n          # get assigned orders which don't have start or end times\n          {\n            AND: [\n              { soStatus: \"Open\" }\n              { soEmployeeCode_not: null }\n              {\n                OR: [\n                  { startTime: null }\n                  { starDate: null }\n                  { endTime: null }\n                  { endDate: null }\n                ]\n              }\n            ]\n          }\n        ]\n      }\n    ) {\n      ...WorkOrderFields\n    }\n  }\n  ", "\n"])), FRAGMENTS.WORK_ORDER);
exports.UPDATE_WORK_ORDER = graphql_tag_1.default(templateObject_9 || (templateObject_9 = __makeTemplateObject(["\n  mutation updateWorkOrder($code: String!, $data: WorkOrderUpdateInput!) {\n    updateWorkOrder(where: { code: $code }, data: $data) {\n      id\n    }\n  }\n"], ["\n  mutation updateWorkOrder($code: String!, $data: WorkOrderUpdateInput!) {\n    updateWorkOrder(where: { code: $code }, data: $data) {\n      id\n    }\n  }\n"])));
exports.UPDATE_SEVERAL_WORK_ORDERS = graphql_tag_1.default(templateObject_10 || (templateObject_10 = __makeTemplateObject(["\n  mutation updateSeveralWorkOrders($orders: [WorkOrderUpdateInput!]!) {\n    updateSeveralWorkOrders(orders: $orders)\n  }\n"], ["\n  mutation updateSeveralWorkOrders($orders: [WorkOrderUpdateInput!]!) {\n    updateSeveralWorkOrders(orders: $orders)\n  }\n"])));
exports.GET_WORK_ORDER_FIELDS = graphql_tag_1.default(templateObject_11 || (templateObject_11 = __makeTemplateObject(["\n  query getWorkOrderFields {\n    __type(name: \"WorkOrder\") {\n      name\n      fields(includeDeprecated: false) {\n        name\n        type {\n          kind\n          name\n          ofType {\n            kind\n            name\n          }\n        }\n      }\n    }\n  }\n"], ["\n  query getWorkOrderFields {\n    __type(name: \"WorkOrder\") {\n      name\n      fields(includeDeprecated: false) {\n        name\n        type {\n          kind\n          name\n          ofType {\n            kind\n            name\n          }\n        }\n      }\n    }\n  }\n"])));
var templateObject_1, templateObject_2, templateObject_3, templateObject_4, templateObject_5, templateObject_6, templateObject_7, templateObject_8, templateObject_9, templateObject_10, templateObject_11;
//# sourceMappingURL=queries.js.map