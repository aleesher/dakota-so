"use strict";
var __makeTemplateObject = (this && this.__makeTemplateObject) || function (cooked, raw) {
    if (Object.defineProperty) { Object.defineProperty(cooked, "raw", { value: raw }); } else { cooked.raw = raw; }
    return cooked;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
var graphql_tag_1 = __importDefault(require("graphql-tag"));
var constants_1 = require("../../constants");
exports.FETCH_MOMENTS = graphql_tag_1.default(templateObject_1 || (templateObject_1 = __makeTemplateObject(["\n  query moments(\n    $skip: Int = 0,\n    $perPage: Int = ", ",\n    $where: MomentWhereInput,\n    $orderBy: MomentOrderByInput\n  ) {\n    moments(\n      skip: $skip\n      first: $perPage\n      where: $where\n      orderBy: $orderBy\n    ) {\n      id\n      type\n      code\n      navisionCode\n      status\n      actionId\n      hasSoStatusChange\n      hasWoPlanningStatusChange\n      hasScStatusChange\n      isWOPlanningBlocked\n      isSCBlocked\n      isSOBlocked\n      isExportBlocked\n    }\n    momentsConnection(where: $where) {\n      aggregate {\n        count\n      }\n    }\n  }\n"], ["\n  query moments(\n    $skip: Int = 0,\n    $perPage: Int = ", ",\n    $where: MomentWhereInput,\n    $orderBy: MomentOrderByInput\n  ) {\n    moments(\n      skip: $skip\n      first: $perPage\n      where: $where\n      orderBy: $orderBy\n    ) {\n      id\n      type\n      code\n      navisionCode\n      status\n      actionId\n      hasSoStatusChange\n      hasWoPlanningStatusChange\n      hasScStatusChange\n      isWOPlanningBlocked\n      isSCBlocked\n      isSOBlocked\n      isExportBlocked\n    }\n    momentsConnection(where: $where) {\n      aggregate {\n        count\n      }\n    }\n  }\n"])), constants_1.PER_PAGE);
exports.CREATE_MOMENT = graphql_tag_1.default(templateObject_2 || (templateObject_2 = __makeTemplateObject(["\n  mutation createMoment($data: MomentCreateInput!) {\n    createMoment(data: $data) {\n      id\n      type\n      code\n      navisionCode\n      status\n      actionId\n      hasSoStatusChange\n      hasWoPlanningStatusChange\n      hasScStatusChange\n      isWOPlanningBlocked\n      isSCBlocked\n      isSOBlocked\n      isExportBlocked\n    }\n  }\n"], ["\n  mutation createMoment($data: MomentCreateInput!) {\n    createMoment(data: $data) {\n      id\n      type\n      code\n      navisionCode\n      status\n      actionId\n      hasSoStatusChange\n      hasWoPlanningStatusChange\n      hasScStatusChange\n      isWOPlanningBlocked\n      isSCBlocked\n      isSOBlocked\n      isExportBlocked\n    }\n  }\n"])));
exports.UPDATE_MOMENT = graphql_tag_1.default(templateObject_3 || (templateObject_3 = __makeTemplateObject(["\n  mutation updateMoment(\n    $data: MomentUpdateInput!\n    $where: MomentWhereUniqueInput!\n  ) {\n    updateMoment(data: $data, where: $where) {\n      id\n      type\n      code\n      navisionCode\n      status\n      actionId\n      hasSoStatusChange\n      hasWoPlanningStatusChange\n      hasScStatusChange\n      isWOPlanningBlocked\n      isSCBlocked\n      isSOBlocked\n      isExportBlocked\n    }\n  }\n"], ["\n  mutation updateMoment(\n    $data: MomentUpdateInput!\n    $where: MomentWhereUniqueInput!\n  ) {\n    updateMoment(data: $data, where: $where) {\n      id\n      type\n      code\n      navisionCode\n      status\n      actionId\n      hasSoStatusChange\n      hasWoPlanningStatusChange\n      hasScStatusChange\n      isWOPlanningBlocked\n      isSCBlocked\n      isSOBlocked\n      isExportBlocked\n    }\n  }\n"])));
exports.DELETE_MOMENT = graphql_tag_1.default(templateObject_4 || (templateObject_4 = __makeTemplateObject(["\n  mutation deleteMoment($where: MomentWhereUniqueInput!) {\n    deleteMoment(where: $where) {\n      id\n    }\n  }\n"], ["\n  mutation deleteMoment($where: MomentWhereUniqueInput!) {\n    deleteMoment(where: $where) {\n      id\n    }\n  }\n"])));
var templateObject_1, templateObject_2, templateObject_3, templateObject_4;
//# sourceMappingURL=queries.js.map