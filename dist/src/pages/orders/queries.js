"use strict";
var __makeTemplateObject = (this && this.__makeTemplateObject) || function (cooked, raw) {
    if (Object.defineProperty) { Object.defineProperty(cooked, "raw", { value: raw }); } else { cooked.raw = raw; }
    return cooked;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
var graphql_tag_1 = __importDefault(require("graphql-tag"));
var constants_1 = require("./constants");
exports.FETCH_LEAKAGES = graphql_tag_1.default(templateObject_1 || (templateObject_1 = __makeTemplateObject(["\n    query leakages(\n        $skip: Int = 0,\n        $perPage: Int = ", ",\n        $where: ServiceOrderWhereInput,\n        $orderBy: ServiceOrderOrderByInput\n    ) {\n        serviceOrders(\n            skip: $skip\n            first: $perPage\n            where: $where\n            orderBy: $orderBy\n        ) {\n            id\n            code\n            description\n            customerCode\n            customerName\n            postalCode\n            city\n            orderType\n            status\n            priority\n            orderDate\n            startDate\n            endDate\n            employeeCode\n            orderAmount\n            invoicedPrice\n            isLocked\n            lockedBy\n        }\n        serviceOrdersConnection(\n            where: $where\n        ) {\n            aggregate {\n                count\n            }\n        }\n    }\n"], ["\n    query leakages(\n        $skip: Int = 0,\n        $perPage: Int = ", ",\n        $where: ServiceOrderWhereInput,\n        $orderBy: ServiceOrderOrderByInput\n    ) {\n        serviceOrders(\n            skip: $skip\n            first: $perPage\n            where: $where\n            orderBy: $orderBy\n        ) {\n            id\n            code\n            description\n            customerCode\n            customerName\n            postalCode\n            city\n            orderType\n            status\n            priority\n            orderDate\n            startDate\n            endDate\n            employeeCode\n            orderAmount\n            invoicedPrice\n            isLocked\n            lockedBy\n        }\n        serviceOrdersConnection(\n            where: $where\n        ) {\n            aggregate {\n                count\n            }\n        }\n    }\n"])), constants_1.PER_PAGE);
exports.FETCH_ALL_SERVICE_ORDERS = graphql_tag_1.default(templateObject_2 || (templateObject_2 = __makeTemplateObject(["\n  query allServiceOrders(\n    $skip: Int = 0,\n    $perPage: Int = ", ",\n    $where: ServiceOrderWhereInput,\n    $orderBy: ServiceOrderOrderByInput\n  ) {\n    allServiceOrders(\n      skip: $skip\n      first: $perPage\n      where: $where\n      orderBy: $orderBy\n    ) {\n      id\n      code\n      description\n      customerCode\n      customerName\n      postalCode\n      city\n      orderType\n      status\n      priority\n      orderDate\n      startDate\n      endDate\n      employeeCode\n      orderAmount\n      invoicedPrice\n      isLocked\n      lockedBy\n    }\n    serviceOrdersConnection(where: $where) {\n      aggregate {\n        count\n      }\n    }\n  }\n"], ["\n  query allServiceOrders(\n    $skip: Int = 0,\n    $perPage: Int = ", ",\n    $where: ServiceOrderWhereInput,\n    $orderBy: ServiceOrderOrderByInput\n  ) {\n    allServiceOrders(\n      skip: $skip\n      first: $perPage\n      where: $where\n      orderBy: $orderBy\n    ) {\n      id\n      code\n      description\n      customerCode\n      customerName\n      postalCode\n      city\n      orderType\n      status\n      priority\n      orderDate\n      startDate\n      endDate\n      employeeCode\n      orderAmount\n      invoicedPrice\n      isLocked\n      lockedBy\n    }\n    serviceOrdersConnection(where: $where) {\n      aggregate {\n        count\n      }\n    }\n  }\n"])), constants_1.PER_PAGE);
exports.FETCH_SO_PROMOTED_FIELDS = graphql_tag_1.default(templateObject_3 || (templateObject_3 = __makeTemplateObject(["\n  query soPromotedFields {\n    currentUser {\n      soDetailsPromotedFields\n    }\n  }\n"], ["\n  query soPromotedFields {\n    currentUser {\n      soDetailsPromotedFields\n    }\n  }\n"])));
exports.SAVE_SO_PROMOTED_FIELDS = graphql_tag_1.default(templateObject_4 || (templateObject_4 = __makeTemplateObject(["\n  mutation saveSOPromotedFields($promoted: Json) {\n    saveSoDetailsPromotedFields(promoted: $promoted)\n  }\n"], ["\n  mutation saveSOPromotedFields($promoted: Json) {\n    saveSoDetailsPromotedFields(promoted: $promoted)\n  }\n"])));
exports.FETCH_SERVICE_ORDER = graphql_tag_1.default(templateObject_5 || (templateObject_5 = __makeTemplateObject(["\n  query fetchServiceOrder($where: ServiceOrderWhereUniqueInput!) {\n    serviceOrder(where: $where) {\n      id\n      code\n      orderType\n      serviceType\n      invoiceType\n      invoicedPrice\n      globalId\n      conceptId\n      description\n      customerCode\n      reference\n      serviceLocationCode\n      sourceType\n      orderDate\n      orderTime\n      budgetHours\n      expectedHours\n      durationTime\n      isFirmPlanned\n      startDate\n      startTime\n      endDate\n      endTime\n      priority\n      status\n      updateDate\n      updatedBy\n      countryCode\n      actualHours\n      orderNumber\n      reporter {\n        code\n        name\n        surname\n        phone\n        email\n        onBehalfOf\n        type\n        reference\n        priority\n        workText\n        internalText\n        adviceText\n        description\n        isTrackAndTraceActive\n      }\n    }\n  }\n"], ["\n  query fetchServiceOrder($where: ServiceOrderWhereUniqueInput!) {\n    serviceOrder(where: $where) {\n      id\n      code\n      orderType\n      serviceType\n      invoiceType\n      invoicedPrice\n      globalId\n      conceptId\n      description\n      customerCode\n      reference\n      serviceLocationCode\n      sourceType\n      orderDate\n      orderTime\n      budgetHours\n      expectedHours\n      durationTime\n      isFirmPlanned\n      startDate\n      startTime\n      endDate\n      endTime\n      priority\n      status\n      updateDate\n      updatedBy\n      countryCode\n      actualHours\n      orderNumber\n      reporter {\n        code\n        name\n        surname\n        phone\n        email\n        onBehalfOf\n        type\n        reference\n        priority\n        workText\n        internalText\n        adviceText\n        description\n        isTrackAndTraceActive\n      }\n    }\n  }\n"])));
var templateObject_1, templateObject_2, templateObject_3, templateObject_4, templateObject_5;
//# sourceMappingURL=queries.js.map