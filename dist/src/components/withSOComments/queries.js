"use strict";
var __makeTemplateObject = (this && this.__makeTemplateObject) || function (cooked, raw) {
    if (Object.defineProperty) { Object.defineProperty(cooked, "raw", { value: raw }); } else { cooked.raw = raw; }
    return cooked;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
var graphql_tag_1 = __importDefault(require("graphql-tag"));
exports.CREATE_SO_COMMENT = graphql_tag_1.default(templateObject_1 || (templateObject_1 = __makeTemplateObject(["\n  mutation createSOComment($data: ServiceOrderCommentCreateInput!) {\n    createServiceOrderComment(data: $data) {\n      id\n      author {\n        id\n        firstName\n        lastName\n      }\n      serviceOrder {\n        id\n        code\n      }\n      orderCommentType\n      text\n      date\n    }\n  }\n"], ["\n  mutation createSOComment($data: ServiceOrderCommentCreateInput!) {\n    createServiceOrderComment(data: $data) {\n      id\n      author {\n        id\n        firstName\n        lastName\n      }\n      serviceOrder {\n        id\n        code\n      }\n      orderCommentType\n      text\n      date\n    }\n  }\n"])));
exports.DELETE_SO_COMMENT = graphql_tag_1.default(templateObject_2 || (templateObject_2 = __makeTemplateObject(["\n  mutation deleteSOComment($where: ServiceOrderCommentWhereUniqueInput!) {\n    deleteServiceOrderComment(where: $where) {\n      id\n    }\n  }\n"], ["\n  mutation deleteSOComment($where: ServiceOrderCommentWhereUniqueInput!) {\n    deleteServiceOrderComment(where: $where) {\n      id\n    }\n  }\n"])));
exports.FETCH_SO_COMMENTS = graphql_tag_1.default(templateObject_3 || (templateObject_3 = __makeTemplateObject(["\n  query soComments($where: ServiceOrderCommentWhereInput) {\n    serviceOrderComments(where: $where) {\n      id\n      authorCode\n      author {\n        id\n        firstName\n        lastName\n      }\n      serviceOrder {\n        id\n        code\n      }\n      orderCommentType\n      text\n      date\n    }\n  }\n"], ["\n  query soComments($where: ServiceOrderCommentWhereInput) {\n    serviceOrderComments(where: $where) {\n      id\n      authorCode\n      author {\n        id\n        firstName\n        lastName\n      }\n      serviceOrder {\n        id\n        code\n      }\n      orderCommentType\n      text\n      date\n    }\n  }\n"])));
exports.UPDATE_SO_COMMENT = graphql_tag_1.default(templateObject_4 || (templateObject_4 = __makeTemplateObject(["\n  mutation updateSOComment(\n    $data: ServiceOrderCommentUpdateInput!\n    $where: ServiceOrderCommentWhereUniqueInput!\n  ) {\n    updateServiceOrderComment(data: $data, where: $where) {\n      id\n      author {\n        id\n        firstName\n        lastName\n      }\n      serviceOrder {\n        id\n        code\n      }\n      orderCommentType\n      text\n      date\n    }\n  }\n"], ["\n  mutation updateSOComment(\n    $data: ServiceOrderCommentUpdateInput!\n    $where: ServiceOrderCommentWhereUniqueInput!\n  ) {\n    updateServiceOrderComment(data: $data, where: $where) {\n      id\n      author {\n        id\n        firstName\n        lastName\n      }\n      serviceOrder {\n        id\n        code\n      }\n      orderCommentType\n      text\n      date\n    }\n  }\n"])));
var templateObject_1, templateObject_2, templateObject_3, templateObject_4;
//# sourceMappingURL=queries.js.map